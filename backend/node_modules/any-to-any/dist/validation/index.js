"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidInput = void 0;
const constants_1 = require("../constants");
function isValidInput(InputNumber, InputBase, OutputBase) {
    if (InputNumber.charAt(0) === '-')
        InputNumber = InputNumber.slice(1);
    let NumbersInInput = InputNumber.match(/[0-9]/g), AlphabetsInInput = InputNumber.match(/[A-Z]/g), pointOrVerguleInInput = InputNumber.match(/(\.|\,)/g);
    const msgError = (InputBase < 2 || InputBase > 36) ? constants_1.__Error_InputBase__ : ((OutputBase < 2 || OutputBase > 36) ? constants_1.__Error_OutputBase__ : ((InputNumber.length === 0) ? constants_1.__Error_InputNumber_Size__ : (pointOrVerguleInInput ? constants_1.__Error_InputNumber_Int__ : (((!NumbersInInput && AlphabetsInInput && AlphabetsInInput.length !== InputNumber.length) ||
        (NumbersInInput && !AlphabetsInInput && NumbersInInput.length !== InputNumber.length) ||
        (NumbersInInput && AlphabetsInInput && (AlphabetsInInput.length + NumbersInInput.length) !== InputNumber.length)) ? constants_1.__Error_InputNumber_Not_Special_Charts__ : ((() => {
        for (let index = 0; index < InputNumber.length; index++) {
            if (+InputNumber[index] >= InputBase)
                return constants_1.__Error_InputNumber_Less_Than_InputBase__;
        }
    })())))));
    if (msgError)
        throw new Error(msgError);
    return true;
}
exports.isValidInput = isValidInput;
;
